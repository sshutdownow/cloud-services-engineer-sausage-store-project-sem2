name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: ${{ secrets.SAUSAGE_STORE_NAMESPACE }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
  YOUR_DOCKERHUB: ${{ github.repository_owner }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          # Установка сборщика контейнеров Docker:
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          # Авторизация на Docker Hub:
          uses: docker/login-action@v2
          # При помощи with передаём в action параметры username и password:
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            # Хорошо ли держать логин и пароль прямо в коде workflow?
            # Нет, это нехорошо. Хранить пароль надо в Secrets.
        - name: Push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            # Параметр context: ./backend/ указывает, что нужный Dockerfile 
            # находится в ./backend/
            context: ./backend/
            # Параметр push: true указывает, что образ нужно не только собрать,
            # но и отправить на Docker Hub:
            push: true
            # В параметре tags задаётся название и тег для образа.
            # Для каждого пересобранного образа 
            # устанавливаем тег latest, чтобы потом
            # на сервере и в docker-compose.yml не указывать версию образа:
            tags: ${{ env.YOUR_DOCKERHUB }}/sausage-backend:latest
            build-args: |
              VERSION=${{ github.sha }}
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ env.YOUR_DOCKERHUB }}/sausage-frontend:latest
        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: ${{ env.YOUR_DOCKERHUB }}/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:
      #### Опишите необходимые шаги
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v4

        - name: Set names in values.yaml
          working-directory: ./sausage-store-chart
          run: |
            sed -i.orig -e 's/YOUR_DOCKERHUB/${{ env.YOUR_DOCKERHUB }}/g' -e 's/YOUR_STUDENT_HOSTNAME/front-${{ env.YOUR_DOCKERHUB }}/g' values.yaml

        # https://github.com/marketplace/actions/helm-tool-installer
        - name: Install Helm
          uses: azure/setup-helm@v4.3.0
          id: install_helm

        - name: Helm lint chart
          working-directory: ./sausage-store-chart
          run: helm lint .

        - name: Package Helm chart
          working-directory: ./sausage-store-chart
          run: |
            helm dependency update
            helm package .

        - name: Helm install plugin
          run: helm plugin install https://github.com/chartmuseum/helm-push

        - name: Add nexus storage for chart package
          run: |
            helm repo add nexus $NEXUS_HELM_REPO --username $NEXUS_HELM_REPO_USER --password $NEXUS_HELM_REPO_PASSWORD
            helm repo update

        - name: Upload chart package to nexus
          run: |
            helm cm-push -f -u $NEXUS_HELM_REPO_USER -p $NEXUS_HELM_REPO_PASSWORD \
            --context-path /repository/${{ github.repository_owner }} \
            sausage-store-chart/ nexus

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      runs-on: ubuntu-latest
      needs: add_helm_chart_to_nexus

      steps:
      #### Опишите необходимые шаги
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v4

        - name: Install Helm
          uses: azure/setup-helm@v4.3.0
          id: install_helm

        # Первым шагом в пайплайне добавьте Helm-репозиторий Nexus
        - name: Add nexus storage with chart package
          run: |
            helm repo add nexus $NEXUS_HELM_REPO --username $NEXUS_HELM_REPO_USER --password $NEXUS_HELM_REPO_PASSWORD
            helm repo update

        - name: Check if nexus storage is really added
          run: helm repo list

        # Затем добавьте в пайплайн kubeconfig, который вы получили в тренажёре
        - name: Add ~/.kube/config
          run: |
            mkdir -p ~/.kube && touch ~/.kube/config && chmod 0600 ~/.kube/config && \
            echo "${KUBE_CONFIG}" | base64 -d > ~/.kube/config

      # Последний шаг — деплой в кластер Kubernetes
      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install sausage-store nexus/sausage-store-chart \
            --namespace $SAUSAGE_STORE_NAMESPACE \
            --set-string backend.image_tag="latest" \
            --set-string frontend.image_tag="latest" \
            --set-string backend-report.image_tag="latest"
