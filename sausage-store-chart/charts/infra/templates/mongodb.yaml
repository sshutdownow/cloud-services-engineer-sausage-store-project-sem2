apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  annotations:
    helm.sh/hook-weight: "-4"
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        envFrom:
          - configMapRef:
              name: mongodb-conf
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec mongosh -u "$(MONGO_INITDB_ROOT_USERNAME)" -p "($MONGO_INITDB_ROOT_PASSWORD)" --host mongodb --port {{ .Values.mongodb.containerPort }} --authenticationDatabase admin --eval "db.adminCommand('ping')"
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: {{ .Values.mongodb.containerPort }}
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-init
          mountPath: /docker-entrypoint-initdb.d/mongo-init.js
          subPath: mongo-init.js
          readOnly: true

      volumes:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-init
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-init
            items:
              - key: mongo-init.js
                path: mongo-init.js

  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  ports:
  - port: {{ .Values.mongodb.containerPort }}
    targetPort: {{ .Values.mongodb.containerPort }}
  selector:
    app: mongodb
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-conf
data:
  MONGO_INITDB_ROOT_USERNAME: {{ .Values.mongodb.env.MONGO_INITDB_ROOT_USERNAME }}
  MONGO_INITDB_ROOT_PASSWORD: {{ .Values.mongodb.env.MONGO_INITDB_ROOT_PASSWORD }}
  MONGO_INITDB_DATABASE: {{ .Values.mongodb.env.MONGO_INITDB_DATABASE }}
  MONGO_USER_NAME: {{ .Values.mongodb.env.MONGO_USER_NAME }}
  MONGO_USER_PASSWORD: {{ .Values.mongodb.env.MONGO_USER_PASSWORD }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-init"
data:
# https://stackoverflow.com/questions/42912755/how-to-create-a-db-for-mongodb-container-on-start-up
# https://github.com/docker-library/mongo/issues/257
  mongo-init.js: |
    db.createUser(
        {
            user: process.env.MONGO_USER_NAME,
            pwd: process.env.MONGO_USER_PASSWORD,
            roles: [
                {
                    role: "readWrite",
                    db: process.env.MONGO_INITDB_DATABASE
                }
            ]
        }
    );
