apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  annotations:
    helm.sh/hook-weight: "1"
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:14
        envFrom:
          - configMapRef:
              name: postgresql-conf
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ quote .Values.postgresql.env.POSTGRES_USER }} -h 127.0.0.1 -p {{ .Values.postgresql.containerPort }} -d {{ quote .Values.postgresql.env.POSTGRES_DB }}
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: {{ .Values.postgresql.containerPort }}
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  ports:
  - port: {{ .Values.postgresql.containerPort }}
    targetPort: {{ .Values.postgresql.containerPort }}
  selector:
    app: postgresql
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-conf
data:
  POSTGRES_USER: {{ .Values.postgresql.env.POSTGRES_USER }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.env.POSTGRES_PASSWORD }}
  POSTGRES_DB: {{ .Values.postgresql.env.POSTGRES_DB }}
