global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: YOUR_STUDENT_HOSTNAME.2sem.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: YOUR_DOCKERHUB/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "250m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: &backend-config-port 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
  ### Опишите стратегию RollingUpdate для бэкенда
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  image: YOUR_DOCKERHUB/sausage-backend:latest
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  containerPort: *backend-config-port
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
    httpGet:
      # https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/production-ready-endpoints.html
      path: /actuator/health
      port: *backend-config-port
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  vpa:
  ### Опишите VPA (Vertical Pod Autoscaler) для бэкенда
    enabled: true
    mode: "Auto"
    updatePolicy:
      updateMode: "Auto"
    resourcePolicy:
      containerPolicies:
        - containerName: "*"
          controlledResources: ["cpu", "memory"]
          minAllowed:
            memory: "192Mi"
            cpu: "100m"
          maxAllowed:
            memory: "1024Mi"
            cpu: "500m"

backend-report:
### Опишите значения для backend-report
### Приложение должно использовать стратегию Recreate
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  image: YOUR_DOCKERHUB/sausage-backend-report:latest
  ### Приложение использует переменную PORT - порт, на котором оно запустится и DB - Uri-подключение к mongodb.
  ### DB положите в Secret, PORT в ConfigMap
  config:
    # https://helm.sh/docs/chart_template_guide/yaml_techniques/#yaml-anchors
    port: &backend-report-config-port 8080
  secret:
    db: "mongodb://root:rootpassword@mongodb:27017/sausage-store"
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  livenessProbe:
    httpGet:
      path: "/api/v1/health"
      port: *backend-report-config-port
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  hpa:
  ### Опишите HPA для backend-report
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    averageUtilization: 75

infra:
  postgresql:
  ### Опишите необходимые переменные для развертывания PostgresQL в кластере Kubernetes
    env:
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
      POSTGRES_DB: sausage-store
    containerPort: 5432
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: sausage-store
    containerPort: 27017
